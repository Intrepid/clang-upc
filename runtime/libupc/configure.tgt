# This is the target specific configuration file.  This is invoked by the
# autoconf generated configure script.  Putting it in a separate shell file
# lets us skip running autoconf when modifying target specific information.
#
# This file is adapted from the libgomp implementation.

# This file switches on the shell variable ${target}, and sets the
# following shell variables:
#  config_path		An ordered list of directories to search for
#			sources and headers.  This is relative to the
#			config subdirectory of the source tree.
#  XCFLAGS		Add extra compile flags to use.
#  XLDFLAGS		Add extra link flags to use.


# Set defaults
config_path="posix default"

case "${target}" in

  *-*-hpux*)
	case "${target}" in
	  *-*-hpux11*)
	     # HPUX v11.x requires -lrt to resolve sem_init in libgupc.la
	     XLDFLAGS="${XLDFLAGS} -lrt"
	     ;;
	esac
	case "${target}" in
	  hppa[12]*-*-hpux*)
	    # PA 32 HP-UX needs -frandom-seed for bootstrap compare.
	    XCFLAGS="${XCFLAGS} -frandom-seed=fixed-seed"
	    ;;
	esac
	;;

  *-*-mingw32*)
	config_path="mingw32 ${config_path}"
	;;

  *-*-darwin*)
	config_path="darwin bsd ${config_path}"
	;;

  mips-sgi-irix6*)
	# Need to link with -lpthread so libgupc.so is self-contained.
	XLDFLAGS="${XLDFLAGS} -lpthread"
	;;
  *)
	;;

esac
#
#  The logic above sets configuration directories that may
#  be currently unsupported.  Remove non-existent directories
#  from the 'config_path' variable.  It is assumed that higher
#  level logic will check for valid libgupc targets.
#
_config_path=
for cfg_dir in ${config_path}; do
  if test -d ${srcdir}/config/$cfg_dir; then
    _config_path="${_config_path} $cfg_dir"
  fi
done
config_path="${_config_path}"

upc_crtstuff=yes
upc_crtbegin_spec=\
"%{static:upc-crtbeginT%O%s; shared|pie:upc-crtbeginS%O%s; :upc-crtbegin%O%s}"
upc_crtend_spec=\
"%{static:upc-crtendT%O%s; shared|pie:upc-crtendS%O%s; :upc-crtend%O%s}"
upc_crtstuff_objs=\
"upc-crtbeginT.o upc-crtbeginS.o upc-crtbegin.o upc-crtendT.o upc-crtendS.o upc-crtend.o"
upc_crtstuff_mak=
for cfg_dir in ${config_path}; do
  cfg_mak=config/$cfg_dir/upc-crtstuff.mak
  if test -e ${srcdir}/${cfg_mak}; then
    upc_crtstuff_mak=${cfg_mak}
    break
  fi
done

# The following empty alternatives are kept as place holders
# that will be filled in with target-specific settings as needed.
case "${target}" in
  *-*-darwin*)
    ;;
  mips-sgi-irix6*)
    ;;
  *)
    ;;
esac

# For UPC, always add the math library
LIBS="-lm $LIBS"
if test "${upc_numa}" = "yes"; then
  LIBS="-lnuma $LIBS"
fi
if test "x${have_rdynamic}" != "x"; then
  LIBS="-export-dynamic $LIBS"
fi
if test "x${bfdlibs}" != "x"; then
  LIBS="$bfdlibs $LIBS"
fi
if test "${have_bfd}" = "yes"; then
  LIBS="-lbfd -ldl $LIBS"
fi
libgupc_spec="%{!fupc-pthreads*:-lgupc;:-lgupc_pt -lpthread}"
if test "$enable_upc_link_script" = yes; then
  libgupc_spec="-T gupc.ld%s ${libgupc_spec}"
fi
# Set up the set of libraries that we need to link against for libgupc.
# 
link_upc_spec="${libgupc_spec} $LIBS"
